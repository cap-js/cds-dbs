on:
  push:
    branches:
      - main
name: release-please
jobs:
  release-please:
    permissions:
        contents: write
        pull-requests: write
    runs-on: ubuntu-latest
    environment: npm
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{secrets.CDS_DBS_TOKEN}}
          command: manifest
          monorepo-tags: true
      - name: Only run subsquent steps if a release needs to be published
        run: |
          if [ -z ${{ steps.release.outputs.releases_created }}]
          then
            echo "No release needs to be published, exitingâ€¦"
            exit 0
          else
            echo "OK proceeding to release"
          fi
      # The logic below handles the npm publication:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      # Publish packages
      - run: npm ci
      - run: npm test -w db-service -w sqlite -w postgres -- --maxWorkers=1
      - name: Publish db-service
        if: ${{ steps.release.outputs.db-service--release_created }}
        run: npm publish --workspace db-service --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Publish sqlite
        if: ${{ steps.release.outputs.sqlite--release_created }}
        run: npm publish --workspace sqlite --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Publish postgres
        if: ${{ steps.release.outputs.postgres--release_created }}
        run: npm publish --workspace postgres --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

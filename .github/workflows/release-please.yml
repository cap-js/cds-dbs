on:
  push:
    branches:
      - main
name: release-please
jobs:
  release-please:
    permissions:
        contents: write
        pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          command: manifest
          monorepo-tags: true
      ## debug info
      - run: echo ${{ steps.release.outputs }}
      # The logic below handles the npm publication:
      - uses: actions/checkout@v2
        # these if statements ensure that a publication only occurs when
        # a new release is created:
        if: ${{ steps.release.outputs.release_created }}
      - uses: actions/setup-node@v1
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}
      - run: npm ci
        if: ${{ steps.release.outputs.release_created }}
      # - run: npm test -w db-service -w sqlite -w postgres -- --maxWorkers=1
      #   ### existing release actions
      # - run: npm publish --workspace db-service --access public
      #   if: ${{ contains(steps.release.outputs, 'db-service') }}
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      # - run: npm publish --workspace sqlite --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.npm_token}}
      # - run: npm publish --workspace postgres --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.npm_token}}

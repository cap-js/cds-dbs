on:
  push:
    branches:
      - release/v1 # v1 setup
name: release-please
jobs:
  release-please:
    permissions:
        contents: write
        pull-requests: write
        packages: write
    runs-on: ubuntu-latest
    environment: npm
    steps:
      # v4.1.3
      - uses: googleapis/release-please-action@1155c2c8dcbd6b15e85bae6bc6d1fed9552663cb
        id: release
        with:
          token: ${{secrets.CDS_DBS_TOKEN}}
          target-branch: release/v1
      # The logic below handles the npm publication:
      - uses: actions/checkout@v4
        with:
          ref: 'release/v1'
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      ## debug info
      - run: echo '${{ toJSON(steps.release.outputs) }} '

      # Publish packages
      - name: Publish db-service
        if: ${{ steps.release.outputs.db-service--release_created }}
        run: npm publish --workspace db-service --access public --tag maintenance
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Publish sqlite
        if: ${{ steps.release.outputs.sqlite--release_created }}
        run: npm publish --workspace sqlite --access public --tag maintenance
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Publish postgres
        if: ${{ steps.release.outputs.postgres--release_created }}
        run: npm publish --workspace postgres --access public --tag maintenance
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

      - name: Publish SAP HANA
        if: ${{ steps.release.outputs.hana--release_created }}
        run: npm publish --workspace hana --access public --tag maintenance
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
